2025-09-24 17:48:33.938 +01:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-09-24 17:48:34.129 +01:00 [WRN] The entity type 'Address' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2025-09-24 17:48:34.147 +01:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-09-24 17:48:35.307 +01:00 [INF] Executed DbCommand (79ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-24 17:48:35.826 +01:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-24 17:48:36.244 +01:00 [INF] Now listening on: http://localhost:5124
2025-09-24 17:48:36.248 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-24 17:48:36.249 +01:00 [INF] Hosting environment: Development
2025-09-24 17:48:36.253 +01:00 [INF] Content root path: C:\Users\Emma B\Desktop\Emma project\.net\Restaurants\Restaurants_API
2025-09-24 17:48:36.788 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5124/swagger/index.html - null null
2025-09-24 17:48:37.094 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5124/swagger/index.html - 200 null text/html;charset=utf-8 311.2987ms
2025-09-24 17:48:37.647 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5124/swagger/v1/swagger.json - null null
2025-09-24 17:48:38.026 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5124/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 379.1922ms
2025-09-24 17:48:57.067 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5124/api/Restaurants - null null
2025-09-24 17:48:57.092 +01:00 [WRN] Failed to determine the https port for redirect.
2025-09-24 17:48:57.108 +01:00 [INF] Executing endpoint 'Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)'
2025-09-24 17:48:57.177 +01:00 [INF] Route matched with {action = "GetAll", controller = "Restaurants"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller Restaurants_API.Controllers.RestaurantsController (Restaurants_API).
2025-09-24 17:48:57.195 +01:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-24 17:48:57.222 +01:00 [INF] Getting all restaurants
2025-09-24 17:48:57.680 +01:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]
FROM [Restaurants] AS [r]
2025-09-24 17:48:58.078 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+SelectListIterator`2[[Restaurants.Domain.Entities.Restaurant, Restaurants.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Restaurants.Application.Dtos.Restaurants.RestaurantDto, Restaurants.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-24 17:48:58.233 +01:00 [INF] Executed action Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API) in 1035.9233ms
2025-09-24 17:48:58.237 +01:00 [INF] Executed endpoint 'Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)'
2025-09-24 17:48:58.252 +01:00 [INF] HTTP GET /api/Restaurants responded 200 in 1156.6529 ms
2025-09-24 17:48:58.296 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5124/api/Restaurants - 200 null application/json; charset=utf-8 1229.0168ms
2025-09-24 17:53:50.505 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5124/api/Restaurants/5 - application/json 42
2025-09-24 17:53:50.519 +01:00 [INF] Executing endpoint 'Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API)'
2025-09-24 17:53:50.592 +01:00 [INF] Route matched with {action = "UpdateRestaurant", controller = "Restaurants"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateRestaurant(Int32, Restaurants.Application.Restaurants.Commands.UpdateRestaurant.UpdateRestaurantCommand) on controller Restaurants_API.Controllers.RestaurantsController (Restaurants_API).
2025-09-24 17:53:50.693 +01:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-24 17:53:50.751 +01:00 [INF] Executed action Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API) in 158.2825ms
2025-09-24 17:53:50.753 +01:00 [INF] Executed endpoint 'Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API)'
2025-09-24 17:53:50.754 +01:00 [INF] HTTP PATCH /api/Restaurants/5 responded 400 in 235.8666 ms
2025-09-24 17:53:50.758 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5124/api/Restaurants/5 - 400 null application/problem+json; charset=utf-8 263.0532ms
2025-09-24 17:54:14.864 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5124/api/Restaurants/5 - application/json 42
2025-09-24 17:54:14.910 +01:00 [INF] Executing endpoint 'Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API)'
2025-09-24 17:54:14.926 +01:00 [INF] Route matched with {action = "UpdateRestaurant", controller = "Restaurants"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateRestaurant(Int32, Restaurants.Application.Restaurants.Commands.UpdateRestaurant.UpdateRestaurantCommand) on controller Restaurants_API.Controllers.RestaurantsController (Restaurants_API).
2025-09-24 17:54:14.979 +01:00 [INF] Updating restaurant with id: 5 with {"Id":5,"Name":"now","Description":"now","HasDelivery":false,"$type":"UpdateRestaurantCommand"}
2025-09-24 17:54:15.833 +01:00 [INF] Executed DbCommand (108ms) [Parameters=[@__id_0='5'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Category], [t].[ContactEmail], [t].[ContactNumber], [t].[Description], [t].[HasDelivery], [t].[Name], [t].[Address_City], [t].[Address_PostalCode], [t].[Address_Street], [d].[Id], [d].[Description], [d].[KiloCalories], [d].[Name], [d].[Price], [d].[RestaurantId]
FROM (
    SELECT TOP(1) [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]
    FROM [Restaurants] AS [r]
    WHERE [r].[Id] = @__id_0
) AS [t]
LEFT JOIN [Dishes] AS [d] ON [t].[Id] = [d].[RestaurantId]
ORDER BY [t].[Id]
2025-09-24 17:54:16.264 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[@p2='5', @p0='now' (Size = 4000), @p1='now' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Restaurants] SET [Description] = @p0, [Name] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-24 17:54:16.335 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-09-24 17:54:16.335 +01:00 [INF] Executed action Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API) in 1408.3848ms
2025-09-24 17:54:16.336 +01:00 [INF] Executed endpoint 'Restaurants_API.Controllers.RestaurantsController.UpdateRestaurant (Restaurants_API)'
2025-09-24 17:54:16.337 +01:00 [INF] HTTP PATCH /api/Restaurants/5 responded 204 in 1426.8089 ms
2025-09-24 17:54:16.339 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5124/api/Restaurants/5 - 204 null null 1475.7752ms
{"@t":"2025-09-24T17:25:41.2062954Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2025-09-24T17:25:41.3711326Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2025-09-24T17:25:41.3912221Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2025-09-24T17:25:42.7463074Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"66","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-09-24T17:25:43.2503996Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"31","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-09-24T17:25:43.7451654Z","@mt":"Now listening on: {address}","address":"http://localhost:5124","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2025-09-24T17:25:43.7493376Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2025-09-24T17:25:43.7501924Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2025-09-24T17:25:43.7504156Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\Emma B\\Desktop\\Emma project\\.net\\Restaurants\\Restaurants_API","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2025-09-24T17:25:44.2248540Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1d40cbc7d217be31ff7dbeed79b17f19","@sp":"a8fa19b6ab789c9c","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:25:44.4747168Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1d40cbc7d217be31ff7dbeed79b17f19","@sp":"a8fa19b6ab789c9c","ElapsedMilliseconds":251.4861,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:25:45.0782694Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"0344a3a2b29e97732ff2ff75a87d67dd","@sp":"ccfa0d8b3a6b4b34","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000002","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:25:45.3401210Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"0344a3a2b29e97732ff2ff75a87d67dd","@sp":"ccfa0d8b3a6b4b34","ElapsedMilliseconds":261.5593,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000002","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.2671207Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/api/Restaurants","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.3135716Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.3291274Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","EndpointName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.3933745Z","@mt":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","RouteData":"{action = \"GetAll\", controller = \"Restaurants\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll()","Controller":"Restaurants_API.Controllers.RestaurantsController","AssemblyName":"Restaurants_API","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"f6d19af8-5f2a-40df-9962-93c3abafd922","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.4129816Z","@mt":"You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.","@l":"Warning","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","SourceContext":"LuckyPennySoftware.MediatR.License","ActionId":"f6d19af8-5f2a-40df-9962-93c3abafd922","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.4411163Z","@mt":"Getting all restaurants","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","SourceContext":"Restaurants.Application.Restaurants.Queries.GetAllRestaurants.GetAllRestaurantQueryHandler","ActionId":"f6d19af8-5f2a-40df-9962-93c3abafd922","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:11.9616108Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","elapsed":"49","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\r\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"f6d19af8-5f2a-40df-9962-93c3abafd922","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:12.1845376Z","@mt":"Executing {ObjectResultType}, writing value of type '{Type}'.","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","ObjectResultType":"OkObjectResult","Type":"System.Linq.Enumerable+SelectListIterator`2[[Restaurants.Domain.Entities.Restaurant, Restaurants.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Restaurants.Application.Dtos.Restaurants.RestaurantDto, Restaurants.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"f6d19af8-5f2a-40df-9962-93c3abafd922","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:12.2538411Z","@mt":"Executed action {ActionName} in {ElapsedMilliseconds}ms","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","ActionName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","ElapsedMilliseconds":849.8955,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:12.2550982Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","EndpointName":"Restaurants_API.Controllers.RestaurantsController.GetAll (Restaurants_API)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
{"@t":"2025-09-24T17:26:12.2610480Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["948.4545"],"@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","RequestMethod":"GET","RequestPath":"/api/Restaurants","StatusCode":200,"Elapsed":948.4545,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2025-09-24T17:26:12.2859533Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"817bb2685d78ff090a059b4105e8c287","@sp":"8d97f794647c86c6","ElapsedMilliseconds":1019.035,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5124","PathBase":"","Path":"/api/Restaurants","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNFRHTI7OCVJ:00000003","RequestPath":"/api/Restaurants","ConnectionId":"0HNFRHTI7OCVJ"}
